一、WebSocket特点
    WebSocket是真正的“全员工”的通信协议，与TCP一样，客户端和服务器都可以随时向对方发送数据。WebSocket没有使用TCP的“IP地址+端口号”，
    而是延用了HTTP的URI格式，引入两个新名字：“ws”和“wss”，分别表示明文和加密的WebSocket协议。
    WebSocket的默认端口“80”和“443”，因为互联网上的防火墙屏蔽了绝大多数端口，只对HTTP的80、443放行，所有WebSocket可以伪装成HTTP
    协议，容易穿透防火墙，与服务器建立连接。
二、WebSocket帧结构
    结束标志位+操作码+帧长度+掩码
    1、第一个字节的第一位“FIN”是消息结束的标志位，表示数据发送完毕。一个消息可以拆成多个帧，接收方看到“FIN”后，可以把前面的帧拼起来，组成
    完整的消息。
    2、“FIN”后面的三个位是保留位，目前没有任何意义，但必须是0。
    3、第一个字节的后4位很重要，叫“Opcode”，操作码，就是帧类型，比如1表示帧内容是纯文本，2表示帧内容是二进制数据，8是关闭连接，9和10是连接
    保活的PING和PONG。
    4、第二个字节第一位是掩码标志位“MASK”，表示帧内容是否使用异或操作做简单的加密。目前的WebSocket标准规定，客户端发送数据必须使用掩码，而
    服务器发送则不使用掩码。
    5、第二个字节后7位是“Payload len”，表示帧内容的长度。是另一种变长编码，最少7位，最多是7+64位，也就是额外增加了8个字节，所以一个WebSocket
    帧最大是2^64。
    6、长度字段后面是“Masking-key”，掩码密钥，是由上面的标志位“MASK”决定的，如果使用掩码就是4个字节的随机数，否则就不存在。
三、WebSocket的握手
    WebSocket的握手是一个标准的HTTP Get请求，但要带上两个协议升级的专用头字段：
        “Connection: Upgrade”，表示要协议“升级”；
        “Upgrade: websocket”，表示要“升级”成WebSocket协议。
    为了防止普通的HTTP消息被“意外”识别成WebSocket，握手消息还增加了两个额外的认证用头字段：
        Sec-WebSocket-Key：一个Base64编码的16字节随机数，作为简单的认证密钥；
        Sec-WebSocket-Version：协议的版本号，当前必须是13。
    服务器收到HTTP请求报文，看到上面的四个字段，就知道不是一个普通的GET请求，而是WebSocket的升级请求，于是就不走普通的HTTP请求，而是WebSocket
    的升级请求，不走普通的HTTP处理流程，而是构造一个特殊的“101 Switching Protocols”响应报文，通知客户端，接下来就不用HTTP了，全改用WebSocket
    协议通信。
    WebSocket的握手响应报文是有特殊格式的，要用字段“Sec-WebSocket-Accept”验证客户端请求报文，同样是为了防止误连接。
    
1.分布式事务定义
    分布式事务就是指事务的发起者、资源及资源管理器和事务协调者分别位于分布式系统的不同节点上。
2.CAP   
    C：数据一致性
    A：可用性
    P：分区容忍性
    在分布式系统中，P是必然的，如果不选P，一旦发生分区错误，整个分布式系统就完全无法使用了，只能当分布式系统发生错误时，如何选择一致性和可用性。
    当一套系统在发生分区故障后，客户端的任何请求都被卡死或者超时，但是系统的每个节点总是会返回一致的数据，这套系统就是CP系统，比如zookeeper。
    当一套系统在发生分区故障后，客户端依然可以访问系统，但是获取的数据有的是新的数据，有的是老数据，这套系统就是AP系统，比如eureka。
3.CP+HA
    分布式事务是CP+HA，其中A是没有完全符合，但是能够达到Highly-Available，即高可用。CP+HA意味着不是BASE，只要写入成功，接下来的读能够读取到
    最行的结果，不用担心读取到的不是最新数据，在多副本读写上与单机是一致的。
4.分布式事务解决方案
（1）两阶段提交/XA
    XA规范主要定义了（全局）事务管理器（TM）和（局部）资源管理器（RM）之间的接口，本地的数据库如MySQL扮演的是RM角色。
    第一阶段（prepare）：所有的参与者RM准备执行事务并锁住需要的资源，参与者ready时，向TM报告已准备就绪。
    第二阶段（commit/rollback）：当事务管理者（TM）确认所有参与者（RM）都ready后，向所有参与者发送commit命令。
    成功完成的XA事务例子：
        经典的转账问题，A需要转100给B，那么需要A的余额减去100，B的余额加上100，整个转账要保证成功。
        1.AP/应用程序开启全局事务
        2.AP/应用程序调用TransOut。
        3.微服务1在TM/事务管理器上注册子事务。
        4.微服务1进行本地prepare。
        5.AP/应用程序调用TransIn。
        6.微服务2在事务管理器上注册子事务。
        7.微服务2进行本地prepare。
        8.AP/应用程序上报全部prepare成功。
        9.TM/事务管理器通知TransOut提交。
        10.微服务1进行本地提交。
        11.TM/事务管理器通知TransIn提交。
        12.微服务2进行本地提交。
    如果有任何一个参与者prepare失败，TM会通知所有完成prepare的参与者进行回滚。
    特点：
        简单易理解，开发较容易。
        对资源进行了长时间的锁定，并发度低。
1.操作系统常用的进程调度算法
（1）先来先服务（FCFS）
    当在作业调度中采用该算法时，每次调度都是从后备作业队列中选择一个或多个最先进入该队列的作业，将它们调入内存，为它们分配资源、创建进程，然后放入就绪队列。
    在进程调度中采用该算法时，每次调度是从就绪队列中选择一个最先进入该队列的进程，为它分配处理机。
（2）短作业（进程）优先调度算法
    短作业优先调度算法（SJF），是从后备队列中选择一个或若干个估计运行时间最短的作业，将它们调入内存运行。
    短进程优先调度算法（SPF），是从就绪队列中选出一个估计运行时间最短的进程，将处理机分配给它，使它立即执行并一直执行到完成或发生某事件被阻塞而放弃处理机。
（3）时间片轮转算法
    系统将所有的就绪进程按先来先服务的原则排成一个队列，每次调度时把CPU分配给队首进程，并令其执行一个时间片。时间片的大小从几ms到几百ms。当执行的时间片用完，
    由一个计时器发出时钟中断请求，调度程序便据此信号来停止该进程的执行，并将它送往就绪队列的末尾。然后再把处理机分配给就绪队列中的队首进程，也执行一个时间片。
    保证就绪队列中的所有进程在一给定时间内均能获得一时间片的处理机执行时间。系统可以在给定时间内想用所有用户的请求。
（4）多级反馈队列调度算法
    设置多个就绪队列，并为各个队列赋予不同的优先级。第一个队列的优先级最高，依次降低。该算法赋予各个队列中进程执行时间片的大小也各不相同，优先权越高的队列，每个
    进程的执行时间片就越小。当一个新进程进入内存后，首先放入第一队列的末尾，按FCFS原则排序等待调度。当轮到该进程执行时，如果能在该时间片内完成，便可准备撤离系统；
    如果在一个时间片内没有完成，调度程序就将该进程转入第二队列的末尾，再按FCFS等待调度执行，如果仍未完成将其放入第三队列，依次下去，在第n队按照时间片轮转的方式进行。
    仅当第一队列空闲时，调度程序才会调度第二队列中的进程运行，如果有新的进程进入优先级较高的队列，则新进程将抢占正在运行进程的处理机。
（5）优先权调度算法
    最高优先权调度算法（FPF），常被用于批处理系统中，当用于作业调度时，系统从后备队列中选择若干个优先权最高的作业装入内存；当用于进程调度时，该算法把处理机分配给
    就绪队列中优先权最高的进程。
    非抢占式优先权算法
        在这种方式下，系统一旦把处理机分配给就绪队列中优先权最高的进程后，该进程便一直执行下去，直至完成，或因某事件使该进程放弃处理机时，系统将处理机分配给另一进程。
    抢占式优先权调度算法
        在执行期间，只要出现了另一个优先权更高的进程，进程调度就立即停止当前进程（原优先权最高的进程）的执行，重新非配给最新到的优先权最高的进程。能更好的满足紧迫作业
        的要求，常用于要求比较严格的实时系统中，以及对性能要求较高的批处理和分时系统中。
2.进程间通信的方式
（1）管道pipe：是一种半双工的通信方式，数据只能单向流动，而且只能在具有亲缘关系的进程间使用。进程的亲缘关系通常是指父子进程关系。
（2）命名管道FIFO：有名管道也是半双工的通信方式，但是允许无亲缘关心进程间的通信。
（3）消息队列MessageQueue：消息队列是由消息的链表，存放在内核中并由消息队列标识符标识。消息队列克服了信号传递信息少，管道只能承载无格式字节流以及缓冲区大小受限等缺点。
（4）共享存储SharedMemory：共享内存就是映射一段能被其他进程所访问的内存，这段共享内存由一个进程创建，但多个进程都可以访问。共享内存是最快的IPC方式，它是针对其他进程
间通信方式运行效率低而专门设计的。它往往与其他通信机制，如信号量，配合使用，来实现进程间的同步和通信。
（5）信号量Semaphore：信号量是一个计数器，可以用来控制多个进程对共享资源的访问。它常作为一种锁机制，防止某进程正在访问共享资源时，其他进程也访问该资源。因此，主要作为
进程间以及同一进程内不同线程之间的同步手段。
（6）套接字Socket：
（7）信号Signal：用于通知接收进程某个事件已经发生。


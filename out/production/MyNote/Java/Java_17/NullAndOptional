import java.util.Objects;
import java.util.Optional;

public class NullAndOptional {

    public static void main(String[] args) {
        System.out.println(new Person(null));

        System.out.println(new Person2(null));

//        System.out.println(new Person3(null));

//        new Animal(null, true);

        var car = new Car("red", null);
        var name = car.driver().map(Person::name).orElse("autopilot");
        System.out.println(name);
    }
}

record Person(String name) {
    public String toString() {
        return "hello " + name;
    }
}

record Person2(String name) {
    public String toString() {
        if (name == null) {
            return "hello unnamed";
        }
        return "hello " + name;
    }
}

record Person3(String name) {
    public Person3 {
        Objects.requireNonNull(name);
    }
    public String toString() {
        return "hello " + name;
    }
}

record Animal(String kind, boolean wild) {
    public Animal {
        Objects.requireNonNull(kind);
    }
    public boolean isDangerousWith(Animal animal) {
        Objects.requireNonNull(animal);
        return wild || !kind.equals(animal.kind);
    }
}

class Car {
    private final Person driver;
    private final String color;
    public Car(String color, Person driver) {
        this.color = Objects.requireNonNull(color);
        this.driver = driver;
    }
    public String color() {
        return color;
    }
    public Optional<Person> driver() {
        return Optional.ofNullable(driver);
    }
}